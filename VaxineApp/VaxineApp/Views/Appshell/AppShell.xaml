<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms"
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:HomeStatus="clr-namespace:VaxineApp.Views.Home.Status"
       xmlns:Anonymous="clr-namespace:VaxineApp.Views.Home.Status.Anonymous"
       xmlns:HomeInsights="clr-namespace:VaxineApp.Views.Home.Insights"
       xmlns:HomeFamily="clr-namespace:VaxineApp.Views.Home.Family"
       xmlns:HomeArea="clr-namespace:VaxineApp.Views.Home.Area.Area"
       xmlns:HomeAreaClinic="clr-namespace:VaxineApp.Views.Home.Area.Clinic"
       xmlns:HomeAreaDoctor="clr-namespace:VaxineApp.Views.Home.Area.Doctor"
       xmlns:HomeAreaInfluencer="clr-namespace:VaxineApp.Views.Home.Area.Influencer"
       xmlns:HomeAreaMasjeed="clr-namespace:VaxineApp.Views.Home.Area.Masjeed"
       xmlns:HomeAreaSchool="clr-namespace:VaxineApp.Views.Home.Area.School"
       xmlns:HomeProfile="clr-namespace:VaxineApp.Views.Home.Profile"
       xmlns:ViewModel="clr-namespace:VaxineApp.ViewModels"
       xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
       xmlns:localFont="clr-namespace:VaxineApp.Font"
       xmlns:AppshellPage="clr-namespace:VaxineApp.Views.Appshell"
       Title="VaxineApp"
       x:Class="VaxineApp.Views.Appshell.AppShell">
  <Shell.BindingContext>
    <ViewModel:AppShellViewModel></ViewModel:AppShellViewModel>
  </Shell.BindingContext>
  <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

  <Shell.Resources>
    <ResourceDictionary>
      <Style x:Key="BaseStyle"
             TargetType="Element">
        <Setter Property="Shell.BackgroundColor"
                Value="{StaticResource Primary}" />
        <Setter Property="Shell.ForegroundColor"
                Value="White" />
        <Setter Property="Shell.TitleColor"
                Value="White" />
        <Setter Property="Shell.DisabledColor"
                Value="#B4FFFFFF" />
        <Setter Property="Shell.UnselectedColor"
                Value="#95FFFFFF" />
        <Setter Property="Shell.TabBarBackgroundColor"
                Value="{StaticResource Primary}" />
        <Setter Property="Shell.TabBarForegroundColor"
                Value="White" />
        <Setter Property="Shell.TabBarUnselectedColor"
                Value="#95FFFFFF" />
        <Setter Property="Shell.TabBarTitleColor"
                Value="White" />
      </Style>
      <Style TargetType="TabBar"
             BasedOn="{StaticResource BaseStyle}" />
      <Style TargetType="FlyoutItem"
             BasedOn="{StaticResource BaseStyle}" />

      <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
      <Style Class="FlyoutItemLabelStyle"
             TargetType="Label">
        <Setter Property="TextColor"
                Value="White"></Setter>
      </Style>
      <Style Class="FlyoutItemLayoutStyle"
             TargetType="Layout"
             ApplyToDerivedTypes="True">
        <Setter Property="VisualStateManager.VisualStateGroups">
          <VisualStateGroupList>
            <VisualStateGroup x:Name="CommonStates">
              <VisualState x:Name="Normal">
                <VisualState.Setters>
                  <Setter Property="BackgroundColor"
                          Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                  <Setter TargetName="FlyoutItemLabel"
                          Property="Label.TextColor"
                          Value="{StaticResource Primary}" />
                </VisualState.Setters>
              </VisualState>
            </VisualStateGroup>
          </VisualStateGroupList>
        </Setter>
      </Style>

      <!--
            Custom Style you can apply to any Flyout Item
            -->
      <Style Class="MenuItemLayoutStyle"
             TargetType="Layout"
             ApplyToDerivedTypes="True">
        <Setter Property="VisualStateManager.VisualStateGroups">
          <VisualStateGroupList>
            <VisualStateGroup x:Name="CommonStates">
              <VisualState x:Name="Normal">
                <VisualState.Setters>
                  <Setter TargetName="FlyoutItemLabel"
                          Property="Label.TextColor"
                          Value="{StaticResource Primary}" />
                </VisualState.Setters>
              </VisualState>
            </VisualStateGroup>
          </VisualStateGroupList>
        </Setter>
      </Style>
    </ResourceDictionary>
  </Shell.Resources>

  <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
  <Shell.FlyoutHeader>
    <AppshellPage:FlyoutHeaderPage/>
  </Shell.FlyoutHeader>
  <Shell.FlyoutFooter>
    <AppshellPage:FlyoutFooterPage/>
  </Shell.FlyoutFooter>
  <MenuItem>
    <Shell.MenuItemTemplate>
      <DataTemplate>
        <Label HeightRequest="1" BackgroundColor="LightGray"></Label>
      </DataTemplate>
    </Shell.MenuItemTemplate>
  </MenuItem>
  <FlyoutItem Title="{xct:Translate Home}">
    <FlyoutItem.Icon>
      <FontImageSource FontFamily="SegoeMDL2"
                       Glyph="&#xE80F;"
                       Color="Black" />
    </FlyoutItem.Icon>
    <Tab Title="{xct:Translate Home}">
      <Tab.Icon>
        <FontImageSource Glyph="&#xE10F;"
                         FontFamily="SegoeMDL2"
                         Size="24" />
      </Tab.Icon>
      <ShellContent Title="Child"
                    ContentTemplate="{DataTemplate HomeStatus:StatusPage}" />
      <ShellContent Title="Anonymous Child"
                    ContentTemplate="{DataTemplate Anonymous:AnonymousChildPage}" />
    </Tab>
    <Tab Icon="Home_Insights.png"
         Title="{xct:Translate Insights}">
      <ShellContent ContentTemplate="{DataTemplate HomeInsights:InsightsPage}" />
    </Tab>
    <Tab Title="{xct:Translate Family}">
      <Tab.Icon>
        <FontImageSource Glyph="&#xECC8;"
                         FontFamily="SegoeMDL2"
                         Size="24" />
      </Tab.Icon>
      <ShellContent ContentTemplate="{DataTemplate HomeFamily:FamilyListPage}" />
    </Tab>
    <Tab Icon="Home_Area.png"
         Title="{xct:Translate Area}">
      <ShellContent Title="{xct:Translate Area}"
                    ContentTemplate="{DataTemplate HomeArea:AreaPage}" />
      <ShellContent Title="{xct:Translate Masjeed}"
                    ContentTemplate="{DataTemplate HomeAreaMasjeed:MasjeedPage}" />
      <ShellContent Title="{xct:Translate School}"
                    ContentTemplate="{DataTemplate HomeAreaSchool:SchoolPage}" />
      <ShellContent Title="{xct:Translate Influencer}"
                    ContentTemplate="{DataTemplate HomeAreaInfluencer:InfluencerPage}" />
      <ShellContent Title="{xct:Translate Clinic}"
                    ContentTemplate="{DataTemplate HomeAreaClinic:ClinicPage}" />
      <ShellContent Title="{xct:Translate Doctor}"
                    ContentTemplate="{DataTemplate HomeAreaDoctor:DoctorPage}" />
    </Tab>
    <Tab Icon="Home_Profile.png"
         Title="{xct:Translate Profile}">
      <ShellContent ContentTemplate="{DataTemplate HomeProfile:ProfilePage}" />
    </Tab>

  </FlyoutItem>
  <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
  <MenuItem>
    <Shell.MenuItemTemplate>
      <DataTemplate>
        <Label HeightRequest="1" BackgroundColor="LightGray"></Label>
      </DataTemplate>
    </Shell.MenuItemTemplate>
  </MenuItem>
  <MenuItem Text="{xct:Translate Profile}"
            StyleClass="MenuItemLayoutStyle"
            Command="{Binding GoToProfileCommand}">
    <MenuItem.IconImageSource>
      <FontImageSource FontFamily="SegoeMDL2"
                       Glyph="&#xE13D;"
                       Color="Black" />
    </MenuItem.IconImageSource>
  </MenuItem>
  <MenuItem Text="{xct:Translate Help}"
            StyleClass="MenuItemLayoutStyle"
            IconImageSource="FlyoutItem_Help.png"
            Command="{Binding GoToHelpPageCommand}">
  </MenuItem>
  <MenuItem Text="Announcements Centre"
            StyleClass="MenuItemLayoutStyle"
            Command="{Binding GoToAnnouncementsCentrePageCommand}">
    <MenuItem.IconImageSource>
      <FontImageSource FontFamily="MaterialIcons"
                       Glyph="{x:Static localFont:MaterialDesignIcons.InformationVariant}"
                       Color="Black" />
    </MenuItem.IconImageSource>
  </MenuItem>
  <MenuItem Text="Recycle Bin"
            StyleClass="MenuItemLayoutStyle"
            Command="{Binding GoToRecycleBinPageCommand}">
    <MenuItem.IconImageSource>
      <FontImageSource FontFamily="SegoeMDL2"
                       Glyph=""
                       Color="Black" />
    </MenuItem.IconImageSource>
  </MenuItem>
  <MenuItem>
    <Shell.MenuItemTemplate>
      <DataTemplate>
        <Label HeightRequest="1" BackgroundColor="LightGray"></Label>
      </DataTemplate>
    </Shell.MenuItemTemplate>
  </MenuItem>
  <MenuItem Text="{xct:Translate Logout}"
            StyleClass="MenuItemLayoutStyle"
            IconImageSource="FlyoutMenuItem_Logout.png"
            Command="{Binding LogginOutCommand}">
  </MenuItem>
  <MenuItem Text="{xct:Translate RemoveAccountFromDevice}"
            StyleClass="MenuItemLayoutStyle"
            Command="{Binding RemoveAccountCommand}">
    <MenuItem.IconImageSource>
      <FontImageSource FontFamily="SegoeMDL2"
                       Glyph="&#xECC9;"
                       Color="red" />
    </MenuItem.IconImageSource>
  </MenuItem>
  <MenuItem>
    <Shell.MenuItemTemplate>
      <DataTemplate>
        <Label HeightRequest="1" BackgroundColor="LightGray"></Label>
      </DataTemplate>
    </Shell.MenuItemTemplate>
  </MenuItem>
  <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
  <!--<TabBar>
        <ShellContent Route="LoginPage" ContentTemplate="{DataTemplate local:LoginPage}" />
    </TabBar>-->

  <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>ContentHere</Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>

    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
